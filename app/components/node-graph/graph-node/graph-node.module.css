.node {
    position: absolute;
    width: calc(var(--node-cell-width) * var(--grid-size) - 2px);
    border-radius: 0.25rem;
    display: flex;
    flex-direction: column;
    user-select: none;
    overflow: hidden;
    font-size: 0.875em;
    cursor: grab;

    background-color: rgb(from var(--gray-50) r g b / 85%);

    [data-theme=dark] & {
        background-color: rgb(from var(--gray-800) r g b / 85%);
    }
}

.head {
    height: var(--grid-size);
    color: var(--gray-50);
    display: flex;
    flex-direction: row;
    align-items: center;
    padding-inline: 0.5rem;
    column-gap: 0.25rem;

    & svg {
        width: 1rem;
        height: 1rem;
    }
}

.body {
    display: flex;
    flex-direction: column;
    margin: -1px;
}

.row {
    height: var(--grid-size);
    display: grid;
    align-items: center;
    
    & span {
        color: var(--gray-600);

        [data-theme=dark] & {
            color: var(--gray-200)
        }
    }
}

.input {
    grid-template-columns: var(--grid-size) 1fr;
    padding-right: calc(0.25rem + 1.5px);
}

.output {
    grid-template-columns: 1fr var(--grid-size);
    padding-left: calc(0.25rem + 1.5px);
    text-align: right;
}

.constant {
    &>*:first-child {
        justify-self: center;
    }
}

.pin {
    display: flex;
    align-items: center;
    justify-self: center;
    padding: 0.25rem;
    border-radius: 2rem;
    cursor: pointer;

    & svg {
        fill: none;
    }

    &[data-connected=true] svg {
        fill: currentColor;
    }

    &.connecting svg {
        fill: currentColor;
    }

    &.no-connect {
        cursor: not-allowed;
    }

    &:hover {
        background-color: var(--gray-200);

        [data-theme=dark] & {
            background-color: var(--gray-700);
        }
    }
}